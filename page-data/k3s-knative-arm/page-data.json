{"componentChunkName":"component---src-templates-blog-post-js","path":"/k3s-knative-arm/","result":{"data":{"site":{"siteMetadata":{"title":"andreveiga.dev"}},"markdownRemark":{"id":"19524ab3-2f2a-5123-819e-5c18bd68ceb4","excerpt":"Installation This past week I wanted to try out Knative, a “Kubernetes-based platform to deploy and manage modern serverless workloads”. In essence, what I’m…","html":"<h2>Installation</h2>\n<p>This past week I wanted to try out <a href=\"https://knative.dev/docs/\">Knative</a>, a “Kubernetes-based platform to deploy and manage modern serverless workloads”. In essence, what I’m looking forward is a higher level abstration for running applications/microservices without worrying with Kubernetes inherent complexities.</p>\n<p>I’ve been using <a href=\"https://k3s.io\">K3s</a>, a light-weight Kubernetes distribution built by the team behind <a href=\"https://rancher.com\">Rancher</a> for all of my deployments for a while. It’s easy and fast to install, highly scalable and has a minimal footprint, perfect for on-premises and self-managed deployments.</p>\n<p>K3s comes with it’s own network layer, provided by Traefik. However, since Knative needs to takeover the networking layer in order to successfully run applications as Knative Services, Traefik needs to be disabled. It’s possible to install K3s without Traefik by running the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -sfL https://get.k3s.io <span class=\"token operator\">|</span> <span class=\"token function\">sh</span> -s - --disable traefik</code></pre></div>\n<p>After this, to install Knative, just follow the <a href=\"https://knative.dev/docs/install/serving/install-serving-with-yaml/\">Knative installation guide</a>.</p>\n<p>Finally, to try out and “smoke test” the installation, I’ve created the following Knative Service definition (which deploys Nginx as a Knative Service)…</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># hello.yaml</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> serving.knative.dev/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># This is the name of our new \"Revision,\" it must follow the convention {service-name}-{revision-name}</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello<span class=\"token punctuation\">-</span>nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>…and applied it with the the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> kubectl apply -f hello.world</code></pre></div>\n<p>You can then get the application URL by listing the Knative Services (note that you’ll need the Knative CLI, <code class=\"language-text\">kn</code>, installed):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kn <span class=\"token function\">service</span> list</code></pre></div>\n<h2>Automation</h2>\n<p>I’ve created a set of <a href=\"https://www.ansible.com\">Ansible</a> playbooks to deploy K3s, Knative (and a “smoke test” application) on ARM and made them available in <a href=\"https://github.com/aveiga/k3s-knative-arm\">this GitHub repo</a>. Hope it makes your life easier, when testing Knative.</p>","frontmatter":{"title":"Installing K3s and Knative on ARM","date":"January 16, 2022","description":"Setting up Knative on Ubuntu Server 20.04 running on ARM"}},"previous":{"fields":{"slug":"/automation/"},"frontmatter":{"title":"Documentation, Automation and Ansible"}},"next":null},"pageContext":{"id":"19524ab3-2f2a-5123-819e-5c18bd68ceb4","previousPostId":"d0e3ab55-f664-5547-b1a7-730b37e3cece","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"]}